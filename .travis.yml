language: c

matrix:
  fast_finish: true
  allow_failures:
    - os: osx
  include:
    - os: osx
      osx_image: xcode7.3
      compiler: clang
    - os: linux
      compiler: gcc

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - liblapack-dev
      - valgrind
      - gcc-4.8
      - g++-4.8
      - clang

install:
    - if [[ "$CC" == "gcc" ]]; then export CXX="g++-4.8"; fi

    - export TRAVIS_PYTHON_VERSION="2.7"
    # We do this conditionally because it saves us some downloading if the version is the same.
    - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh;
        else
          wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
        fi
      else
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        else
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        fi
      fi

    - bash miniconda.sh -b -p $HOME/miniconda
    - export CONDA_HOME="$HOME/miniconda"
    - export PATH="$CONDA_HOME/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
    - conda install pyqt=4 scipy=0.16.1 pylint numpy pandas matplotlib future

env:
  global:
     - ERT_SHOW_BACKTRACE=1

before_script:
  - pushd ..
  - git clone https://github.com/Statoil/libecl
  - mkdir libecl/build
  - pushd libecl/build
  - export LIBECL_INSTALL_ROOT=$(pwd)/install
  - cmake .. -DCMAKE_INSTALL_PREFIX=$LIBECL_INSTALL_ROOT
  - make install
  - popd
  - popd
  - mkdir build
  - pushd build
  - cmake -DCMAKE_PREFIX_PATH=$LIBECL_INSTALL_ROOT -DERT_BUILD_GUI=ON -DBUILD_TESTS=ON -DBUILD_PYTHON=ON -DERT_DOC=OFF -DINSTALL_ERT_LEGACY=ON ..

script:
  - make && ctest --output-on-failure
